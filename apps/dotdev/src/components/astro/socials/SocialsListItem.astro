---
/**
 * Properties to pass to the {@linkcode SocialsItem} component.
 */
type Props<P extends string = string> = DotDevSocialsItem<P>;

export type { Props as SocialsItemProps };

const { platform_name, ...props } = Astro.props;

let icon: string | undefined;
let name: string;
let link: string;

switch (platform_name) {
	case "bluesky": {
		icon = "tabler-brand-bluesky";
		name = props.name;
		link = `https://bsky.app/profile/${name}`;
		break;
	}
	case "discord": {
		icon = "tabler-brand-discord";
		name = props.name;
		link = `https://discord.com/users/${(props as any).id}`;
		break;
	}
	case "discord-server": {
		icon = "tabler-brand-discord";
		name = props.name;
		link = `https://discord.com/invite/${(props as any).invite}`;
		break;
	}
	case "github": {
		icon = "tabler-brand-github";
		name = props.name;
		link = `https://github.com/${name}`;
		break;
	}
	case "ko-fi": {
		icon = "tabler-coffee";
		name = props.name;
		link = `https://ko-fi.com/${name}`;
		break;
	}
	case "steam": {
		icon = "tabler-brand-steam";
		name = (props as any).id;
		link = `https://steamcommunity.com/id/${name}`;
		break;
	}
	default: {
		({ name, link } = props);
	}
}
---

<a
	b="1 rd-2 solid transparent hover:ultraviolet/50"
	c="unset hover:bg-ultraviolet/10"
	href={link}
	p="2"
	rel="noreferrer"
	relative="~"
	size="h-max-12"
	t="[background-color,border-color]-125-ease"
	target="_blank"
	title=`${platform_name}: ${name}`
>
	{icon && <span block="~" icon={icon} size="6" />}
	{
		icon && platform_name == "discord-server" && (
			<div
				absolute="~"
				b="rd-9999"
				c="bg-seasalt carolinablue dark:bg-richblack"
				pos="b-2 r-2"
			>
				<span block="~" icon="tabler-world" pos="b-2 r-2" size="3" />
			</div>
		)
	}
	<span select={icon ? "none" : "auto"} sr-only={icon ? "~" : undefined}>
		{icon ? name : `${platform_name}: ${name}`}
	</span>
</a>
