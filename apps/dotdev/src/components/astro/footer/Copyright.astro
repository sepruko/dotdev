---
/**
 * Properties to pass to the {@linkcode Copyright} component.
 */
interface Props extends DotDevCopyright {
	/**
	 * The entity which holds the copyright.
	 */
	holder: DotDevEntity;
}

export type { Props as CopyrightProps };

const { holder, ...copyright } = Astro.props;

/**
 * Renders a {@linkcode DotDevCopyright}.
 *
 * @param param0
 * The `DotDevCopyright` to render for.
 *
 * @returns
 * Either a normal `string` or a scuffed mimicry of Astro's rendering.
 */
function CopyrightDisplay({ name, link }: DotDevCopyright): astroHTML.JSX.Element {
	const url = link
		? new URL(/^https?:\/\//.test(link) ? link : `${Astro.url.origin}${link}`)
		: null;
	const ext = url?.origin != Astro.url.origin;

	return url
		? {
				t: `<a c="unset visited:unset" decoration="dashed" href="${link}"${ext ? ' target="_blank" rel="noreferrer"' : ""}>${name}</a>`,
			}
		: name;
}

/**
 * Renders a {@linkcode DotDevEntity}.
 *
 * @param param0
 * The `DotDevEntity` to render for.
 *
 * @returns
 * Either a normal `string` or a scuffed mimicry of Astro's rendering.
 */
function HolderDisplay({ name, link }: DotDevEntity): astroHTML.JSX.Element {
	const url = link
		? new URL(/^https?:\/\//.test(link) ? link : `${Astro.url.origin}${link}`)
		: null;
	const ext = url?.origin != Astro.url.origin;

	return url
		? {
				t: `<a c="unset visited:unset" decoration="dashed" href="${link}"${ext ? ' target="_blank" rel="noreferrer"' : 'data-astro-prefetch=""'}>${name}</a>`,
			}
		: name;
}
---

<span><CopyrightDisplay {...copyright} />Â© by <HolderDisplay {...holder} /></span>
